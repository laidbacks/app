<div class="dashboard-container">
  <!-- Header with greeting and motivational quote -->
  <header class="dashboard-header">
    <div class="user-welcome">
      <div class="greeting-container">
        <div class="greeting-prefix-wrapper">
          <span class="greeting-prefix">Hello</span>
          <span class="greeting-comma">,</span>
        </div>
        <h1 class="username-container" id="username-container">
          <% @user.username.each_char.with_index do |char, index| %>
            <span class="username-letter" style="animation-delay: <%= 0.1 * index %>s;"><%= char %></span>
          <% end %>
          <span class="greeting-exclamation">!</span>
        </h1>
      </div>
      <p class="tagline">Today is a new opportunity to build great habits.</p>
    </div>
    <div class="quote-container" id="quote-container">
      <blockquote class="quote-of-day" id="quote-text">
        <% quote_parts = @quote.split(' ‚Äì ') %>
        <% if quote_parts.length == 2 %>
          "<%= quote_parts[0] %>" <span class="quote-author">‚Äì <%= quote_parts[1] %></span>
        <% else %>
          "<%= @quote %>"
        <% end %>
      </blockquote>
      <div class="quote-tip">Tap to change</div>
    </div>
  </header>

  <!-- Main dashboard content -->
  <main class="dashboard-content">
    <!-- Progress overview -->
    <section class="progress-overview">
      <div class="progress-card">
        <div class="progress-header">
          <h2>Your Progress</h2>
          <span class="date"><%= Date.today.strftime("%B %d, %Y") %></span>
        </div>
        <div class="progress-stats">
          <div class="stat-item">
            <span class="stat-value">80%</span>
            <span class="stat-label">Today's Completion</span>
          </div>
          <div class="stat-item">
            <span class="stat-value">14</span>
            <span class="stat-label">Days Streak</span>
          </div>
          <div class="stat-item">
            <span class="stat-value">3</span>
            <span class="stat-label">Perfect Weeks</span>
          </div>
        </div>
        <div class="progress-chart">
          <div class="chart-heading">
            <h3>Weekly Habit Completion</h3>
          </div>
          <div class="habit-calendar">
            <% ["Mon", "Tue", "Wed", "Thu", "Fri", "Sat", "Sun"].each do |day| %>
              <div class="day-container">
                <div class="day-label"><%= day %></div>
                <div class="day-marker <%= ["Mon", "Tue", "Wed", "Thu"].include?(day) ? 'completed' : (day == 'Fri' ? 'today' : '') %>"></div>
              </div>
            <% end %>
          </div>
        </div>
      </div>
    </section>

    <!-- Habits section -->
    <section class="habits-section">
      <div class="section-header">
        <h2>Your Habits</h2>
        <a href="/habits/new" class="add-habit-btn">+ Add New Habit</a>
      </div>

      <% if @habits.empty? %>
        <div class="empty-state">
          <p>You don't have any habits yet. Start tracking by adding your first habit.</p>
          <a href="/habits/new" class="primary-button">Add Your First Habit</a>
        </div>
      <% else %>
        <!-- Today's habits -->
        <div class="habits-container">
          <% @habits.each do |habit| %>
            <div class="habit-card <%= habit.habit_logs.find_by(date: Date.today)&.completed? ? 'completed' : 'pending' %>" data-habit-id="<%= habit.id %>">
              <div class="habit-info">
                <h3 class="habit-name"><%= habit.name %></h3>
                <span class="habit-streak"><%= habit.current_streak || 0 %> day streak</span>
              </div>
              <div class="habit-actions">
                <%= button_to habit.habit_logs.find_by(date: Date.today)&.completed? ? '‚úì Completed' : 'Mark Complete',
                      toggle_today_habit_path(habit),
                      method: :patch,
                      class: 'toggle-habit-btn' %>
                <a href="/habits/<%= habit.id %>" class="view-details-btn">
                  <button>View Details</button>
                </a>
              </div>
            </div>
          <% end %>
        </div>
      <% end %>
    </section>

    <!-- Insights and tips -->
    <section class="insights-section">
      <div class="insights-card">
        <h2>Habit Insights</h2>
        <div class="insights-content">
          <div class="insight-item">
            <div class="insight-icon">üèÜ</div>
            <div class="insight-text">
              <h3>Your Strongest Habit</h3>
              <p>
                <% if @strongest_habit %>
                  <span class="strongest-habit-name"><%= @strongest_habit.name %></span> - 
                  <span class="strongest-habit-streak"><%= @strongest_habit.current_streak || 0 %> day streak!</span>
                <% else %>
                  <span class="strongest-habit-name">No habits yet</span> - 
                  <span class="strongest-habit-streak">0 day streak!</span>
                <% end %>
              </p>
            </div>
          </div>
          <div class="insight-item">
            <div class="insight-icon">üí°</div>
            <div class="insight-text">
              <h3>Habit Building Tip</h3>
              <p>Stack new habits with existing ones to make them stick easier. For example, meditate right after brushing your teeth.</p>
            </div>
          </div>
        </div>
      </div>
    </section>
  </main>
</div>
<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get the DOM elements
    const quoteContainer = document.getElementById('quote-container');
    const quoteText = document.getElementById('quote-text');
    
    // Store all quotes in JavaScript
    const quotes = <%= raw @quotes.to_json %>;
    
    // Current quote index
    let currentQuoteIndex = quotes.indexOf('<%= @quote %>');
    if (currentQuoteIndex === -1) currentQuoteIndex = 0;

    // Function to format the quote with styled author
    function formatQuote(quote) {
      // Split the quote at the dash to separate author
      const parts = quote.split(' ‚Äì ');
      if (parts.length === 2) {
        return `"${parts[0]}" <span class="quote-author">‚Äì ${parts[1]}</span>`;
      }
      return `"${quote}"`;
    }
    
    // Format the initial quote
    quoteText.innerHTML = formatQuote(quotes[currentQuoteIndex]);
    
    // Function to get a random quote different from the current one
    function getRandomQuote() {
      if (quotes.length <= 1) return quotes[0];
      
      // Find a random index different from the current
      let newIndex;
      do {
        newIndex = Math.floor(Math.random() * quotes.length);
      } while (newIndex === currentQuoteIndex);
      
      currentQuoteIndex = newIndex;
      return quotes[newIndex];
    }
    
    // Add click event listener to change the quote
    quoteContainer.addEventListener('click', function() {
      // Add a transition effect
      quoteText.style.opacity = '0';
      
      setTimeout(function() {
        // Update the quote
        const newQuote = getRandomQuote();
        quoteText.innerHTML = formatQuote(newQuote);
        
        // Fade back in
        quoteText.style.opacity = '1';
      }, 300);
    });
    
    // Add hover styles to indicate it's clickable
    quoteContainer.style.cursor = 'pointer';
    
    // Add transition for smooth effect
    quoteText.style.transition = 'opacity 0.3s ease';
  });
</script>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Get the DOM elements
    const quoteContainer = document.getElementById('quote-container');
    const quoteText = document.getElementById('quote-text');
    
    // Store all quotes in JavaScript
    const quotes = <%= raw @quotes.to_json %>;
    
    // Current quote index
    let currentQuoteIndex = quotes.indexOf('<%= @quote %>');
    if (currentQuoteIndex === -1) currentQuoteIndex = 0;

    // Function to format the quote with styled author
    function formatQuote(quote) {
      // Split the quote at the dash to separate author
      const parts = quote.split(' ‚Äì ');
      if (parts.length === 2) {
        return `"${parts[0]}" <span class="quote-author">‚Äì ${parts[1]}</span>`;
      }
      return `"${quote}"`;
    }
    
    // Format the initial quote
    quoteText.innerHTML = formatQuote(quotes[currentQuoteIndex]);
    
    // Function to get a random quote different from the current one
    function getRandomQuote() {
      if (quotes.length <= 1) return quotes[0];
      
      // Find a random index different from the current
      let newIndex;
      do {
        newIndex = Math.floor(Math.random() * quotes.length);
      } while (newIndex === currentQuoteIndex);
      
      currentQuoteIndex = newIndex;
      return quotes[newIndex];
    }
    
    // Add click event listener to change the quote
    quoteContainer.addEventListener('click', function() {
      // Add a transition effect
      quoteText.style.opacity = '0';
      
      setTimeout(function() {
        // Update the quote
        const newQuote = getRandomQuote();
        quoteText.innerHTML = formatQuote(newQuote);
        
        // Fade back in
        quoteText.style.opacity = '1';
      }, 300);
    });
    
    // Add hover styles to indicate it's clickable
    quoteContainer.style.cursor = 'pointer';
    
    // Add transition for smooth effect
    quoteText.style.transition = 'opacity 0.3s ease';
  });
</script>

<style>
  /* Dashboard Styles */
  .dashboard-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
  }

  .dashboard-header {
    display: flex;
    justify-content: space-between;
    align-items: flex-start;
    margin-bottom: 2rem;
    flex-wrap: wrap;
  }

  .user-welcome {
    margin-bottom: 1.5rem;
  }

  .greeting-container {
    display: flex;
    align-items: baseline;
    flex-wrap: wrap;
    position: relative;
    margin-bottom: 0.5rem;
    perspective: 1000px; /* Add perspective for 3D effects */
    transition: transform 0.3s ease;
  }

  .greeting-prefix-wrapper {
    display: flex;
    align-items: baseline;
    position: relative;
    transform-style: preserve-3d;
  }

  .greeting-prefix {
    font-size: 2.5rem;
    font-weight: 700;
    background: linear-gradient(45deg, #FF5E62, #FF9966);
    background-size: 200% auto;
    -webkit-background-clip: text;
    background-clip: text;
    -webkit-text-fill-color: transparent;
    animation: gradient-shift 8s ease infinite;
    position: relative;
    line-height: 1.2;
    text-shadow: 0 1px 0 rgba(255, 255, 255, 0.4),
                0 2px 0 rgba(255, 255, 255, 0.3),
                0 3px 0 rgba(255, 255, 255, 0.2),
                0 10px 20px rgba(0, 0, 0, 0.1);
    transform-style: preserve-3d;
  }

  .greeting-comma {
    font-size: 2.5rem;
    font-weight: 700;
    margin-right: 0.3rem;
    color: #FF8E53;
    animation: comma-bounce 3s ease-in-out infinite;
    display: inline-block;
    transform-origin: bottom;
  }

  .greeting-prefix-wrapper::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 3px;
    background: linear-gradient(90deg, #FF5E62, #FF9966);
    border-radius: 5px;
    animation: underline-pulse 3s ease-in-out infinite;
  }

  .username-container {
    font-size: 2.6rem;
    font-weight: 800;
    margin: 0;
    display: flex;
    align-items: baseline;
    line-height: 1.2;
    transform-style: preserve-3d;
    position: relative;
  }

  .username-letter {
    display: inline-block;
    animation: letter-appear 0.6s cubic-bezier(0.175, 0.885, 0.32, 1.275) forwards;
    opacity: 0;
    transform: translateY(20px) rotate(10deg);
    transition: all 0.3s ease;
    position: relative;
    transform-style: preserve-3d;
    color: #333;
  }

  .username-letter:hover {
    color: #FF5E62;
    transform: translateY(-10px) scale(1.2) translateZ(20px);
    animation: letter-wiggle 1s ease infinite;
    z-index: 2;
    text-shadow: 0 6px 10px rgba(255, 94, 98, 0.3);
  }

  .username-letter::after {
    content: '';
    position: absolute;
    bottom: -5px;
    left: 0;
    width: 100%;
    height: 3px;
    background-color: #FF9966;
    border-radius: 3px;
    transform: scaleX(0);
    transform-origin: left;
    transition: transform 0.3s ease;
  }

  .username-letter:hover::after {
    transform: scaleX(1);
  }

  .greeting-exclamation {
    color: #FF5E62;
    font-size: 2.6rem;
    display: inline-block;
    animation: exclamation-appear 0.8s cubic-bezier(0.175, 0.885, 0.32, 1.275) 0.5s forwards, 
               exclamation-pulse 2s ease-in-out 1.5s infinite;
    opacity: 0;
    transform: scale(0) rotate(20deg);
    margin-left: 0.2rem;
  }

  .tagline {
    font-size: 1.1rem;
    color: #666;
    margin-top: 0.8rem;
    padding-left: 0.8rem;
    border-left: 3px solid #FF9966;
    position: relative;
    transition: all 0.3s ease;
    max-width: 90%;
  }

  .tagline:hover {
    transform: translateX(5px);
    color: #555;
    border-left-color: #FF5E62;
  }

  .quote-container {
    max-width: 400px;
    background: linear-gradient(135deg, #6e8efb, #a777e3);
    border-radius: 12px;
    padding: 1.8rem;
    color: white;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.15);
    transition: all 0.3s ease;
    cursor: pointer;
    position: relative;
    overflow: hidden;
    border-left: 5px solid #ffd166;
  }

  .quote-container:hover {
    transform: translateY(-5px);
    box-shadow: 0 8px 25px rgba(0, 0, 0, 0.2);
  }

  .quote-container:active {
    transform: translateY(-2px);
    box-shadow: 0 6px 15px rgba(0, 0, 0, 0.12);
  }

  .quote-container::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(255, 255, 255, 0.1);
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .quote-container:hover::after {
    opacity: 1;
  }

  .quote-container:before {
    content: '"';
    position: absolute;
    top: 5px;
    left: 10px;
    font-size: 5rem;
    font-family: 'Georgia', serif;
    color: rgba(255, 255, 255, 0.1);
    line-height: 1;
  }

  .quote-of-day {
    font-family: 'Georgia', serif;
    font-style: italic;
    font-size: 1.15rem;
    margin: 0;
    line-height: 1.6;
    letter-spacing: 0.01em;
    text-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
  }

  .quote-author {
    color: #ffd166;
    font-weight: 600;
    font-family: 'Inter', sans-serif;
    font-style: normal;
  }

  .quote-tip {
    font-size: 0.85rem;
    color: rgba(255, 255, 255, 0.7);
    text-align: right;
    margin-top: 0.75rem;
    font-style: italic;
    letter-spacing: 0.03em;
  }

  .dashboard-content {
    display: grid;
    grid-template-columns: 1fr;
    gap: 2rem;
  }

  .progress-card, .habit-card, .insights-card {
    background: white;
    border-radius: 12px;
    box-shadow: 0 4px 15px rgba(0, 0, 0, 0.05);
    padding: 1.5rem;
    transition: transform 0.2s ease, box-shadow 0.2s ease;
  }

  .progress-card:hover, .habit-card:hover, .insights-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 6px 20px rgba(0, 0, 0, 0.1);
  }

  .progress-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .progress-header h2 {
    font-size: 1.5rem;
    margin: 0;
    color: #333;
  }

  .date {
    color: #888;
    font-size: 0.9rem;
  }

  .progress-stats {
    display: flex;
    justify-content: space-between;
    margin-bottom: 2rem;
  }

  .stat-item {
    text-align: center;
    flex: 1;
  }

  .stat-value {
    display: block;
    font-size: 2rem;
    font-weight: bold;
    color: #6e8efb;
    margin-bottom: 0.5rem;
  }

  .stat-label {
    font-size: 0.9rem;
    color: #666;
  }

  .progress-chart {
    margin-top: 1rem;
  }

  .chart-heading h3 {
    font-size: 1.1rem;
    color: #555;
    margin-bottom: 1rem;
  }

  .habit-calendar {
    display: flex;
    justify-content: space-between;
  }

  .day-container {
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.5rem;
  }

  .day-label {
    font-size: 0.8rem;
    color: #888;
  }

  .day-marker {
    width: 24px;
    height: 24px;
    border-radius: 50%;
    background-color: #eee;
  }

  .day-marker.completed {
    background-color: #4CAF50;
  }

  .day-marker.today {
    background-color: #FFC107;
    border: 2px solid #FF9800;
  }

  .section-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1.5rem;
  }

  .section-header h2 {
    font-size: 1.5rem;
    color: #333;
    margin: 0;
  }

  .add-habit-btn {
    background-color: #6e8efb;
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .add-habit-btn:hover {
    background-color: #5d7ef3;
  }

  .habits-container {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .habit-card {
    padding: 1.5rem;
    border-left: 4px solid #eee;
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap: 1rem;
  }

  .habit-card.completed {
    border-left-color: #4CAF50;
  }

  .habit-card.pending {
    border-left-color: #FFC107;
  }

  .habit-name {
    font-size: 1.2rem;
    margin: 0 0 0.5rem 0;
    color: #333;
  }

  .habit-streak {
    font-size: 0.9rem;
    color: #666;
  }

  .completed-btn {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: default;
  }

  .complete-btn {
    background-color: #f0f0f0;
    color: #333;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }

  .complete-btn:hover {
    background-color: #e0e0e0;
  }

  .insights-section {
    margin-top: 1rem;
  }

  .insights-content {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 1.5rem;
  }

  .insight-item {
    display: flex;
    align-items: flex-start;
    gap: 1rem;
  }

  .insight-icon {
    font-size: 2rem;
    line-height: 1;
  }

  .insight-text h3 {
    font-size: 1.1rem;
    margin: 0 0 0.5rem 0;
    color: #333;
  }

  .insight-text p {
    font-size: 0.95rem;
    color: #666;
    margin: 0;
    line-height: 1.5;
  }

  .toggle-habit-btn {
    background-color: #4CAF50;
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .toggle-habit-btn:hover {
    background-color: #45a049;
  }
  
  .habit-card.pending .toggle-habit-btn {
    background-color: #f0f0f0;
    color: #333;
  }
  
  .habit-card.pending .toggle-habit-btn:hover {
    background-color: #e0e0e0;
  }
  
  .view-details-btn button {
    background-color: #6b7280;
    color: white;
    border: none;
    padding: 0.6rem 1.2rem;
    border-radius: 6px;
    font-weight: 500;
    cursor: pointer;
    transition: background-color 0.2s ease;
  }
  
  .view-details-btn button:hover {
    background-color: #5a6370;
  }

  /* Ensure the habit-actions flex layout works properly */
  .habit-actions {
    display: flex;
    gap: 10px;
  }
  
  /* Responsive styles for smaller screens */
  @media (max-width: 768px) {
    .dashboard-header {
      flex-direction: column;
      gap: 1.5rem;
    }
    
    .quote-container {
      width: 100%;
      max-width: none;
    }
    
    .progress-stats {
      flex-direction: column;
      gap: 1rem;
    }
    
    .stat-item {
      text-align: left;
      display: flex;
      align-items: center;
      gap: 1rem;
    }
    
    .stat-value {
      margin-bottom: 0;
    }

    .habit-actions {
      flex-direction: column;
    }
  }

  @keyframes gradient-shift {
    0% {
      background-position: 0% 50%;
    }
    50% {
      background-position: 100% 50%;
    }
    100% {
      background-position: 0% 50%;
    }
  }

  @keyframes underline-pulse {
    0%, 100% {
      opacity: 0.7;
      transform: scaleX(0.95);
    }
    50% {
      opacity: 1;
      transform: scaleX(1.05);
    }
  }

  @keyframes letter-appear {
    0% {
      opacity: 0;
      transform: translateY(20px) rotate(10deg);
    }
    100% {
      opacity: 1;
      transform: translateY(0) rotate(0);
    }
  }

  @keyframes letter-wiggle {
    0%, 100% {
      transform: translateY(-10px) rotate(-3deg);
    }
    50% {
      transform: translateY(-12px) rotate(3deg);
    }
  }

  @keyframes exclamation-appear {
    0% {
      opacity: 0;
      transform: scale(0) rotate(20deg);
    }
    50% {
      opacity: 1;
      transform: scale(1.3) rotate(0);
    }
    70% {
      transform: scale(0.9) rotate(0);
    }
    100% {
      opacity: 1;
      transform: scale(1) rotate(0);
    }
  }

  @keyframes exclamation-pulse {
    0%, 100% {
      transform: scale(1);
      text-shadow: 0 0 5px rgba(255, 94, 98, 0.3);
    }
    50% {
      transform: scale(1.2);
      text-shadow: 0 0 15px rgba(255, 94, 98, 0.5);
    }
  }

  @keyframes comma-bounce {
    0%, 100% {
      transform: translateY(0);
    }
    50% {
      transform: translateY(-5px);
    }
  }

  /* Add a subtle shadow underneath the greeting */
  .greeting-container::after {
    content: '';
    position: absolute;
    bottom: -15px;
    left: 10%;
    width: 80%;
    height: 15px;
    background: radial-gradient(ellipse at center, rgba(0,0,0,0.2) 0%, rgba(0,0,0,0) 70%);
    border-radius: 50%;
    z-index: -1;
    opacity: 0.5;
    filter: blur(5px);
    transition: all 0.3s ease;
  }

  .greeting-container:hover::after {
    opacity: 0.7;
    width: 85%;
    filter: blur(6px);
  }
</style> 